# -*- coding: utf-8 -*-
"""1-QubitDeBaseXH.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YTWvOjVSTXMnpyltbrbhTY1j584pDmBn

**|0> : porte X puis Hadamard**
"""

pip install qiskit

import qiskit

pip install qiskit-aer

import qiskit as q
from qiskit_aer import QasmSimulator

# On simule un ordinateur quantique
simulator = QasmSimulator()

# Circuit quantique avec un qubit et une mesure
circuit = q.QuantumCircuit(1, 1)

# Une porte NOT
circuit.x(0)
# Une porte de Hadamard
#circuit.h(0)

# Mesure du qubit (donne un bit classique)
circuit.measure(0, 0)

# Affichage du circuit
print(circuit.draw(output='text'))

### Partie C. Exécution
 # Lancer 1000 simulations
tcircuit = q.transpile(circuit, simulator)
job = simulator.run(tcircuit, shots=1000)

### Partie D. Résultats et visualisation
result = job.result()

# Comptage
counts = result.get_counts(tcircuit)
print("Nombre de '0' et de '1' :", counts)

|1> = alpha |0> + beta |1>
alpha = 0
beta = 1
M(|1>) = 1